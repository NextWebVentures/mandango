<?php

{% for name, field in config_class.fields %}

{% set reference = null %}
{% if field.referenceField is defined and field.referenceField == true and field.referenceFieldName is defined %}
    {% if config_class.referencesOne[field.referenceFieldName] is defined %}
        {% set reference = config_class.referencesOne[field.referenceFieldName] %}
    {% elseif config_class.referencesMany[field.referenceFieldName] is defined %}
        {% set reference = config_class.referencesMany[field.referenceFieldName] %} {# TODO does it work? #}
    {% endif %}
{% endif %}

    /**
     * Set the "{{ name }}" field.
     *
     * @param mixed $value The value.
     *
     * @throws \InvalidArgumentException
     *
     * @return \{{ class }} The document (fluent interface).
     */
    public function set{{ name|ucfirst }}($value)
    {
{% if reference is defined and reference.dbref is defined and reference.dbref == true %}

{# normal: not polymorphic #}
{% if reference.polymorphic is not defined or reference.polymorphic == false %}
        if (!is_null($value) && (!\MongoDBRef::isRef($value) || empty($value['$id']) || empty($value['$ref']))) {
            // we won't it!
            throw new \InvalidArgumentException('The value is invalid');
        }

{# polymorphic #}
{% elseif reference.discriminatorField is not empty and reference.discriminatorMap is not empty %}
        $discriminatorMap = {{ reference.discriminatorMap|var_export }};

        if ((\MongoDBRef::isRef($value) || (is_array($value))) && !empty($value['$id'])) {
            $id = $value['$id'];

            if (isset($value['{{ reference.discriminatorField }}']) && !empty($value['{{ reference.discriminatorField }}'])) {
                $discriminatorValue = $value['{{ reference.discriminatorField }}'];

                $discriminatorValueIndex = array_search($discriminatorValue, $discriminatorMap, true);
                if (false !== $discriminatorValueIndex) {
                    $discriminatorValue = $discriminatorValueIndex;
                }

                if (!array_key_exists($discriminatorValue, $discriminatorMap)) {
                    throw new \InvalidArgumentException(
                        sprintf(
                            'The discriminator value "%s" is not a possible in the reference "{{ name }}" of the class "{{ class }}".',
                            $discriminatorValue
                        )
                    );
                }
            } else {
                throw new \InvalidArgumentException('The ref is invalid (missing discriminatorField class name)');
            }

            $repository = $this->getMandango()->getRepository($discriminatorMap[$discriminatorValue]);
            $collectionName = $repository->getCollectionName();

            if (isset($value['$ref']) && !empty($value['$ref'])) {
                if ($collectionName !== $value['$ref']) {
                    throw new \InvalidArgumentException('The ref is invalid (collection and document mismatch)');
                }
            }

            // possible to do: check if it's correct ID? i don't think so - it isn't rdbms
            $value = \MongoDBRef::create($collectionName, $id);
            $value['{{ reference.discriminatorField }}'] = $discriminatorValue;
        } elseif (!is_null($value)) {
            // we won't it!
            throw new \InvalidArgumentException('The value is invalid');
        }

{% endif %}
{% endif %}

        if (!isset($this->data['fields']['{{ name }}'])) {
{% if config_class.isEmbedded %}
            if (($rap = $this->getRootAndPath()) && !$rap['root']->isNew()) {
{% else %}
            if (!$this->isNew()) {
{% endif %}
                $this->get{{ name | ucfirst }}();
                if ($value === $this->data['fields']['{{ name }}']) {
                    return $this;
                }
            } else {
                if (null === $value) {
                    return $this;
                }
                $this->fieldsModified['{{ name }}'] = null;
                $this->data['fields']['{{ name }}'] = $value;
                return $this;
            }
        } elseif ($value === $this->data['fields']['{{ name }}']) {
            return $this;
        }

        if (!array_key_exists('{{ name }}', $this->fieldsModified)) {
            $this->fieldsModified['{{ name }}'] = $this->data['fields']['{{ name }}'];
        } elseif ($value === $this->fieldsModified['{{ name }}']) {
            unset($this->fieldsModified['{{ name }}']);
        }

        $this->data['fields']['{{ name }}'] = $value;

        return $this;
    }

    /**
     * Returns the "{{ name }}" field.
     *
     * @return mixed The $name field.
     */
    public function get{{ name|ucfirst }}()
    {
        if (!isset($this->data['fields']['{{ name }}'])) {
{% if config_class.isEmbedded %}
            if (
                (!isset($this->data['fields']) || !array_key_exists('{{ name }}', $this->data['fields']))
                &&
                ($rap = $this->getRootAndPath())
                &&
                !$this->isEmbeddedOneChangedInParent()
                &&
                !$this->isEmbeddedManyNew()
            ) {
                $field = $rap['path'].'.{{ field.dbName }}';
                $rap['root']->addFieldCache($field);
                $collection = $this->getMandango()->getRepository(get_class($rap['root']))->getCollection();
                $data = $collection->findOne(array('_id' => $rap['root']->getId()), array($field => 1));
                foreach (explode('.', $field) as $key) {
                    if (!isset($data[$key])) {
                        $data = null;
                        break;
                    }
                    $data = $data[$key];
                }
                if (null !== $data) {
                    {{ mandango_type_to_php(field.type, "$data", "$this->data['fields']['" ~ name ~ "']") }}
                }
            }
            if (!isset($this->data['fields']['{{ name }}'])) {
                $this->data['fields']['{{ name }}'] = null;
            }
{% else %}
            if ($this->isNew()) {
                $this->data['fields']['{{ name }}'] = null;
            } elseif (!isset($this->data['fields']) || !array_key_exists('{{ name }}', $this->data['fields'])) {
                $this->addFieldCache('{{ field.dbName }}');
                $data = $this->getRepository()->getCollection()->findOne(array('_id' => $this->getId()), array('{{ field.dbName }}' => 1));
                if (isset($data['{{ field.dbName }}'])) {
                    {{ mandango_type_to_php(field.type, "$data['" ~ field.dbName ~ "']", "$this->data['fields']['" ~ name ~ "']") }}
                } else {
                    $this->data['fields']['{{ name }}'] = null;
                }
            }
{% endif %}
        }

        return $this->data['fields']['{{ name }}'];
    }
{% endfor %}
